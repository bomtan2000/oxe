// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using Data.Administrator.EFCore.Models;

namespace Data.Administrator.EFCore.DB
{
    public partial class SSOMasterContext : DbContext
    {
        public SSOMasterContext()
        {
        }

        public SSOMasterContext(DbContextOptions<SSOMasterContext> options)
            : base(options)
        {
            AppContext.SetSwitch("Npgsql.EnableLegacyTimestampBehavior", true);
            AppContext.SetSwitch("Npgsql.DisableDateTimeInfinityConversions", true);
        }

        public virtual DbSet<Announcement> Announcement { get; set; }
        public virtual DbSet<AnnouncementAck> AnnouncementAck { get; set; }
        public virtual DbSet<AnnouncementView> AnnouncementView { get; set; }
        public virtual DbSet<Clients> Clients { get; set; }
        public virtual DbSet<Company> Company { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<CustomsFields> CustomsFields { get; set; }
        public virtual DbSet<DriverCheckInOut> DriverCheckInOut { get; set; }
        public virtual DbSet<Drivers> Drivers { get; set; }
        public virtual DbSet<Places> Places { get; set; }
        public virtual DbSet<StdCodes> StdCodes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Announcement>(entity =>
            {
                entity.ToTable("Announcement", "MASTER");

                entity.Property(e => e.Id).UseIdentityAlwaysColumn();

                entity.Property(e => e.AnnounceType).HasMaxLength(50);

                entity.Property(e => e.AnnounceTypeDesc).HasMaxLength(50);

                entity.Property(e => e.Attach1).HasMaxLength(500);

                entity.Property(e => e.Attach2).HasMaxLength(500);

                entity.Property(e => e.Attach3).HasMaxLength(500);

                entity.Property(e => e.Attach4).HasMaxLength(500);

                entity.Property(e => e.CompanyId).HasColumnName("Company_Id");

                entity.Property(e => e.CreateDate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.ExpiredDate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.IsRequireEndorse).HasMaxLength(1);

                entity.Property(e => e.IsValid)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("'1'::\"bit\"");

                entity.Property(e => e.ReadCount).HasDefaultValueSql("0");

                entity.Property(e => e.Subject).HasMaxLength(128);

                entity.Property(e => e.UpdateDate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.UserGroup).HasMaxLength(50);

                entity.Property(e => e.UserGroupDesc).HasMaxLength(50);
            });

            modelBuilder.Entity<AnnouncementAck>(entity =>
            {
                entity.ToTable("Announcement_Ack", "MASTER");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.AckcreateDate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.AnnouncementId).HasColumnName("Announcement_Id");
            });

            modelBuilder.Entity<AnnouncementView>(entity =>
            {
                entity.ToTable("Announcement_View", "MASTER");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.AnnouncementId).HasColumnName("Announcement_Id");

                entity.Property(e => e.ViewTimeStamp).HasColumnType("timestamp without time zone");

                entity.Property(e => e.ViewUserId).HasColumnName("ViewUser_Id");
            });

            modelBuilder.Entity<Clients>(entity =>
            {
                entity.ToTable("Clients", "MASTER");

                entity.Property(e => e.Id).UseIdentityAlwaysColumn();

                entity.Property(e => e.Address).HasMaxLength(200);

                entity.Property(e => e.ClientName)
                    .HasMaxLength(100)
                    .HasComment("Customer Name / Person Name\\n");

                entity.Property(e => e.CompanyId).HasColumnName("Company_Id");

                entity.Property(e => e.ContactPerson).HasMaxLength(50);

                entity.Property(e => e.Country).HasMaxLength(50);

                entity.Property(e => e.CreateByName).HasMaxLength(100);

                entity.Property(e => e.CreateDate)
                    .HasColumnType("timestamp without time zone")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.CustomField01).HasMaxLength(256);

                entity.Property(e => e.CustomField02).HasMaxLength(256);

                entity.Property(e => e.CustomField03).HasMaxLength(256);

                entity.Property(e => e.CustomField04).HasMaxLength(256);

                entity.Property(e => e.CustomField05).HasMaxLength(256);

                entity.Property(e => e.IsValid)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("1")
                    .HasComment("1: VALID\\n0 / NULL : INVALID");

                entity.Property(e => e.MobileNo).HasMaxLength(50);

                entity.Property(e => e.PostalCode).HasMaxLength(50);

                entity.Property(e => e.Remark).HasMaxLength(256);

                entity.Property(e => e.UpdateDate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.UpdatedByName).HasMaxLength(100);
            });

            modelBuilder.Entity<Company>(entity =>
            {
                entity.ToTable("company", "MASTER");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Address)
                    .HasMaxLength(50)
                    .HasColumnName("address")
                    .IsFixedLength();

                entity.Property(e => e.Age).HasColumnName("age");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name");

                entity.Property(e => e.Salary).HasColumnName("salary");
            });

            modelBuilder.Entity<Country>(entity =>
            {
                entity.HasKey(e => e.CountryCode)
                    .HasName("_country_pkey");

                entity.ToTable("Country", "MASTER");

                entity.Property(e => e.CountryCode).HasMaxLength(2);

                entity.Property(e => e.CountryCode3).HasMaxLength(3);

                entity.Property(e => e.CountryCodeNum).HasMaxLength(3);

                entity.Property(e => e.CountryDesc).HasMaxLength(50);

                entity.Property(e => e.Remark).HasMaxLength(256);
            });

            modelBuilder.Entity<CustomsFields>(entity =>
            {
                entity.ToTable("CustomsFields", "MASTER");

                entity.Property(e => e.Id).UseIdentityAlwaysColumn();

                entity.Property(e => e.ColumnObject).HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnType("timestamp without time zone")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.DatabaseName).HasMaxLength(50);

                entity.Property(e => e.DefaultValue).HasMaxLength(45);

                entity.Property(e => e.FieldDesc).HasMaxLength(50);

                entity.Property(e => e.FieldOptions).HasMaxLength(100);

                entity.Property(e => e.FieldType).HasMaxLength(50);

                entity.Property(e => e.IsValid)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("1");

                entity.Property(e => e.Remarks).HasMaxLength(256);

                entity.Property(e => e.TableObject).HasMaxLength(50);

                entity.Property(e => e.UpdateDate).HasColumnType("timestamp without time zone");
            });

            modelBuilder.Entity<DriverCheckInOut>(entity =>
            {
                entity.ToTable("DriverCheckInOut", "MASTER");

                entity.Property(e => e.Id).UseIdentityAlwaysColumn();

                entity.Property(e => e.CheckOutLocation).HasMaxLength(50);

                entity.Property(e => e.CheckOutPlaceDesc).HasMaxLength(200);

                entity.Property(e => e.CheckOutTime).HasColumnType("timestamp without time zone");

                entity.Property(e => e.CompanyId).HasColumnName("Company_Id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("timestamp without time zone")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.CreatedLocation).HasMaxLength(50);

                entity.Property(e => e.DriversId).HasColumnName("Drivers_Id");

                entity.Property(e => e.EquipmentNo).HasMaxLength(50);

                entity.Property(e => e.PlaceDesc).HasMaxLength(200);
            });

            modelBuilder.Entity<Drivers>(entity =>
            {
                entity.ToTable("Drivers", "MASTER");

                entity.Property(e => e.Id).UseIdentityAlwaysColumn();

                entity.Property(e => e.Attach1).HasMaxLength(500);

                entity.Property(e => e.Attach2).HasMaxLength(500);

                entity.Property(e => e.Attach3).HasMaxLength(500);

                entity.Property(e => e.Attach4).HasMaxLength(500);

                entity.Property(e => e.CompanyId).HasColumnName("Company_Id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("timestamp without time zone")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.CustomField01).HasMaxLength(256);

                entity.Property(e => e.CustomField02).HasMaxLength(256);

                entity.Property(e => e.CustomField03).HasMaxLength(256);

                entity.Property(e => e.CustomField04).HasMaxLength(256);

                entity.Property(e => e.CustomField05).HasMaxLength(256);

                entity.Property(e => e.Dob)
                    .HasColumnType("timestamp without time zone")
                    .HasColumnName("DOB");

                entity.Property(e => e.DriverIcno)
                    .HasMaxLength(50)
                    .HasColumnName("DriverICNo");

                entity.Property(e => e.DriverName).HasMaxLength(50);

                entity.Property(e => e.EquipemtType).HasMaxLength(50);

                entity.Property(e => e.IsValid)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("1");

                entity.Property(e => e.LicenseClass).HasMaxLength(50);

                entity.Property(e => e.MobileNo).HasMaxLength(50);

                entity.Property(e => e.PlateNumber).HasMaxLength(50);

                entity.Property(e => e.ReferenceUserId).HasColumnName("ReferenceUser_id");

                entity.Property(e => e.Remark).HasMaxLength(256);

                entity.Property(e => e.UpdateDate).HasColumnType("timestamp without time zone");
            });

            modelBuilder.Entity<Places>(entity =>
            {
                entity.ToTable("Places", "MASTER");

                entity.Property(e => e.Id).UseIdentityAlwaysColumn();

                entity.Property(e => e.Address).HasMaxLength(200);

                entity.Property(e => e.ClientsId)
                    .HasColumnName("Clients_Id")
                    .HasComment("Related with Customer Id \\nIt could be Null , Null means Not related with Customer \\n");

                entity.Property(e => e.CompanyId).HasColumnName("Company_Id");

                entity.Property(e => e.ContactPerson).HasMaxLength(50);

                entity.Property(e => e.Country).HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnType("timestamp without time zone")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.CreatedByName).HasMaxLength(100);

                entity.Property(e => e.CustomField01).HasMaxLength(256);

                entity.Property(e => e.CustomField02).HasMaxLength(256);

                entity.Property(e => e.CustomField03).HasMaxLength(256);

                entity.Property(e => e.CustomField04).HasMaxLength(256);

                entity.Property(e => e.CustomField05).HasMaxLength(256);

                entity.Property(e => e.IsValid)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("1");

                entity.Property(e => e.MobileNo).HasMaxLength(50);

                entity.Property(e => e.PlaceDesc).HasMaxLength(100);

                entity.Property(e => e.Postalcode).HasMaxLength(50);

                entity.Property(e => e.Remark).HasMaxLength(256);

                entity.Property(e => e.UpdateDate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.UpdatedByName).HasMaxLength(100);
            });

            modelBuilder.Entity<StdCodes>(entity =>
            {
                entity.ToTable("StdCodes", "MASTER");

                entity.Property(e => e.Id).HasDefaultValueSql("nextval('\"MASTER\".company_id_seq'::regclass)");

                entity.Property(e => e.CodeDesc).HasMaxLength(128);

                entity.Property(e => e.CodeGroup).HasMaxLength(50);

                entity.Property(e => e.CodeId).HasMaxLength(50);

                entity.Property(e => e.CompanyId).HasColumnName("Company_Id");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("timestamp without time zone")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.CreatedByName).HasMaxLength(100);

                entity.Property(e => e.IsValid)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("1");

                entity.Property(e => e.Remark).HasMaxLength(128);

                entity.Property(e => e.SeqNo).HasDefaultValueSql("1");

                entity.Property(e => e.UpdateDate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.UpdatedByName).HasMaxLength(100);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}